{
  "articles": [
    {
      "path": "about.html",
      "title": "Acerca del sitio",
      "description": "Aprende R de manera eficiente",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2022-05-05T12:13:48-05:00"
    },
    {
      "path": "configurar_github.html",
      "title": "Configuración de Git y Github con RStudio",
      "description": "En este artículo veremos como poder controlar nuestro Github desde RStudio.\n",
      "author": [
        {
          "name": "Santiago Sotelo",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\r\nEn esta sesión explicaré como configurar Git y Github con RStudio\r\npara poder trabajar de manera colaborativa y con un control de\r\nversiones.\r\nPara esto es necesario tener instalado Git en nuestra computadora.\r\nPuedes acceder a Git en el siguiente link.\r\nConfiguración de Git y\r\nGithub\r\nLo más probable es que hayas recibido este archivo directamente por\r\nlo que nos dirigiremos al explorador de archivos o Mis documentos en tu\r\ncomputadora y creamos una carpeta donde iniciaremos el proyecto. Creamos\r\nuna carpeta “proyecto1”, luego cierra este archivo, copialo a la nueva\r\ncarpeta “proyecto1” y vuelve a abrir el archivo en tu R.\r\nBien. Ahora vas a ir a la parte superior en el RStudio y debajo de la\r\npalabra Edit verás una R +. Le hacemos click a New Directory < New\r\nProject, ingresamos un nombre como “proyecto1”, nos aeguramos que se\r\nestá guardando en nuestra nueva carpeta “proyecto1” (browse), dejamos\r\nsin seleccionar las casillas debajo excepto la de “Open in New Session”.\r\nLuego de esto creamos el proyecto y wuala.\r\nCrearse un Github\r\nSegundo, necesitamos una cuenta en Github, en esta página distintos\r\ndesarrolladores comparten su código y elaboran soluciones utilizando\r\ncódigo. Una vez creada la cuenta de Github la tendremos abierta en\r\nnuestro navegador (de preferencia Chrome) para poder sincronizarla con\r\nnuestro RStudio.\r\nPresentarse a Git\r\nAhora, nos dirigimos a nuestro Rstudio y nos aseguramos de tener los\r\npaquetes necesarios para trabajar. Para correr un código, seleccionamos\r\nel código que queremos correr y apretamos control +\r\nenter:\r\n\r\n\r\nif (!require(\"pacman\")) install.packages(\"pacman\")\r\npacman::p_load(devtools, usethis, tidyverse)\r\n\r\n\r\n\r\nGit es un programa que recopila un historial de versiones de un mismo\r\ndocumento/archivo. De esta manera, podemos regresar a una versión pasada\r\nde ser necesario. Git también registra quién ha realizado cada cambio\r\npor lo que debemos presentarnos a Git. Lo haremos de esta manera:\r\n\r\n\r\nuse_git_config(user.name = \"Mi Nombre\", user.email = \"mi_correo@gmail.com\")\r\n\r\n\r\n\r\nTener en cuenta que el correo ingresado debe ser el mismo que el\r\nutilizado para crear tu cuenta de Github.\r\nNuestro objetivo es que aparezca la pestaña “Git” en la esquina\r\nsuperior derecha entre la pestaña “Connections” y “Tutorial” por lo que\r\ncorremos el siguiente comando.\r\n\r\n\r\nusethis::use_git()\r\n\r\n\r\n\r\nNos aparecerá un mensaje abajo en la consola indicando si queremos\r\ncommit los cambios realizado. Es importante que ingresemos la\r\nopción NO. Las opciones están constantemente cambiando\r\nasí que marque la opción que se refiere al no. Seguido a esto, nos\r\naparecerá otra indicación diciendo si queremos reiniciar el R para crear\r\nla pestaña “Git”. Recién en este caso marcamos la opción\r\nSÍ o un enunciado similar. Se reiniciará el R y si ha\r\nseguido estos pasos aparecerá la pestaña Git en la esquina superior\r\nderecha.\r\nConectarse a Github\r\nPara conectarnos a Github necesitamos generar un Token que nos dé las\r\nfacultades para poder manipular nuestro Github desde el RStudio para\r\nesto corremos la siguiente función:\r\n\r\n\r\nusethis::create_github_token(\r\n  description = \"mi_token\"\r\n  )\r\n\r\n\r\n\r\nUna vez corramos este comando se debería abrir una página en internet\r\ncon nuestro Github abierto en la sección Tokens (Developer Settings). En\r\nla pestaña habrán varias casillas para marcar, de preferencia marcamos\r\ntodas. Asimismo, en la caducidad del Token insertamos No\r\nexpiration y luego creamos el token en la parte de abajo.\r\nA continuación, nos aparecerá un código largo el cual vamos a copiar.\r\nSeguido a esto, nos dirigimos al RStudio y corremos la siguiente\r\nfunción:\r\n\r\n\r\nusethis::edit_r_environ()\r\n\r\n\r\n\r\nAparecerá un archivo en la pantalla llamado .Renviron y\r\ndentro de este vamos a ingresar el siguiente código en una línea\r\nvacía:\r\nGITHUB_TOKEN=\"número largo de mi token\"\r\nLuego cerramos el archivo .Renviron y reiniciamos\r\nnuestro R yendo a Session < Restart R.\r\nUna vez reiniciado nuestro R nos dirigimos a la pestaña Git y\r\nseleccionamos los cambios realizados. Si te percatas en la esquina\r\nsuperior derecha de la pestaña Git debería salir no branch.\r\nAhora apretamos el botón commit en la parte superior. Se abrirá\r\nun panel con un espacio para insertar texto a la derecha. Ahí pondremos\r\n“Primer commit”, luego clickeamos el botón commit en la parte de abajo.\r\nSaldrá una pestaña de carga y luego nos permitirá cerrar. Cerramos las\r\npestañas y regresamos a nuestro script de R. Ahora en la esquina\r\nsuperior derecha de la pestaña Git debería salir master o\r\nmain. Si aparece esto vas por buen camino y ya casi\r\nacabas.\r\nA continuación corremos el siguiente comando.\r\n\r\n\r\nusethis::use_github()\r\n\r\n\r\n\r\nDebería aparecer un cuadro de diálogo de Github en el que nos pida\r\nnuestro usuario, contraeña o código. Utilizamos la opción código y nos\r\ndebería llevar a la pestaña de Chrome. Para corroborar que la conexión\r\nse ha establecido, regresamos a nuestro R y verificamos si la flecha\r\nverde en la pestaña Git se encuentra encedida. En caso lo esté, vas y le\r\napretas click. Has realizado tu primer “Push”.\r\nAhora hay una copia de tu proyecto actual (“proyecto1”) en Github el\r\ncual puedes actualizar con Git y R.\r\nCabe recalcar que este proceso se realiza una sola vez y no es\r\nnecesario de repetir contninuamente cada vez que se quiere iniciar un\r\nproyecto.\r\nTipos de interacción con\r\nGithub\r\nSolo play\r\nLo que hemos hecho hasta ahora podríamos considerarlo como colaborar\r\ncon uno mismo o usar el Github de manera individual. El\r\nworkflow es el siguiente:\r\nCrear un R Project en una nueva sesión\r\nUtilizar el comando usethis::use_git(), confirmar el\r\ncommit (Sí)\r\nPush commit a Github\r\nMultiplayer Collaborative\r\nEste tipo de interacción se caracteriza por colaborar con una o más\r\npersonas como si todos fueran dueños del proyecto y puedan hacer cambios\r\ndirectos. Para esto, la persona que quiere iniciar el repositorio en\r\nGithub debe seguir los pasos del “solo play” y subir su proyecto a\r\nGithub. Una vez realizado esto, nos dirigimos a la web Github y en\r\nnuestro proyecto accedemos a la parte de Settings. Luego, en el\r\napartado Access clickeamos a Collaborators y acá\r\nañadimos las cuentas con las que queremos colaborar directamente.\r\nLas personas que se quieren sumar a tu repositorio deben hacer lo\r\nsiguiente. Se dirigen a su RStudio y luego apretan el botón R + debajo\r\nde Edit en la parte superior. En segundo lugar, siguen la ruta Version\r\nControl < Git y en la parte de repositorio URL ingresan el link web\r\nal repositorio Github ya creado. En tercer lugar, crean el proyecto en\r\nuna sesión nueva.\r\nListo, ahora tienes acceso directo a un repositorio ya creado por un\r\ncolega al cual puedes commitear y pushear.\r\nCabe mencionar que la versión en tu computadora debe estar al día con\r\nla versión en el Repositorio Github por lo que antes de commitear y\r\npushear algún cambio es necesario clickear la flecha celeste de\r\nPull que actualiza la versión local a la de internet.\r\nMultiplayer Pull request\r\nComo habrás podido observar, en la interacción “Multiplayer\r\nCollaborative”, los colaboradores pueden hacer cambios directamente sin\r\nnecesidad de que nadie revise y aprueba sus cambios. Esto puede ser\r\nbeneficioso cuando se tiene grupos de trabajo pequeños; sin embargo, a\r\nmedida que se tiene a más colaboradores resulta conveniente una manera\r\nde poder aprobar los cambios antes de implementarlos a la versión Github\r\nRepositorio Web. Para esto tenemos la interacción “Multiplayer Pull\r\nrequest”.\r\nComo hemos realizado anteriormente, el dueño del repositorio debe\r\nseguir los pasos de “Solo Play” para subir su repositorio a la nube. Sin\r\nembargo, en esta interacción no necesita poner a ninguna persona como\r\ncolaborador directo.\r\nEn caso haya un usuario que quiera sugerir un cambio al Repositorio\r\nde Github creado por el dueño debe realizar lo siguiente.\r\nDirigirse a Github en el navegador Chrome.\r\nUna vez ubicado el Repositorio del dueño en Github, hacer click\r\nen el botón Fork (fork creará un duplicado en tu Github del\r\nproyecto)\r\nLuego de fork-earlo, dirigirse a RStudio y crear un nuevo\r\nproyecto con ruta Version Control < Git, y en el url insertar el url\r\ndel duplicado en tu Github.\r\nListo, ahora tienes una copia del proyecto en tu RStudio. Supongamos\r\nque quieres realizar un cambio a un archivo. Luego de realizar dicho\r\ncambio commit y push. Ahora, nos dirigimos a Github en Chrome y en el\r\nrepositorio duplicado en nuestra cuenta verá la opción para poder crear\r\nun Pull Request. Una vez mandado el pull request, el dueño del\r\nrepositorio original decidirá aceptar o rechazar tu cambio.\r\n\r\n\r\n\r\n",
      "last_modified": "2022-05-05T12:13:55-05:00"
    },
    {
      "path": "cosas_de_r.html",
      "title": "Untitled",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Nora Jones",
          "url": "https://example.com/norajones"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\r\nDistill is a publication format for scientific and technical writing,\r\nnative to the web.\r\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\r\n\r\n\r\n\r\n",
      "last_modified": "2022-05-05T12:13:59-05:00"
    },
    {
      "path": "index.html",
      "title": "Aprende R",
      "description": "Capacitación en R para practicantes del Q-LAB\n",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2022-05-05T12:14:05-05:00"
    }
  ],
  "collections": []
}
